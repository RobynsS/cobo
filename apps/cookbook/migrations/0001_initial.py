# Generated by Django 2.2.1 on 2019-05-28 20:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Colour',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('hex', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('colour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cookbook.Colour')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('servings', models.IntegerField()),
                ('preparation_time', models.IntegerField()),
                ('cost', models.IntegerField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Course')),
                ('cuisine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Cuisine')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('step_number', models.IntegerField()),
                ('instruction', models.TextField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
            ],
            options={
                'unique_together': {('recipe', 'step_number')},
            },
        ),
        migrations.CreateModel(
            name='RecipeLabel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Label')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
            ],
            options={
                'unique_together': {('recipe', 'label')},
            },
        ),
        migrations.CreateModel(
            name='IngredientList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cookbook.Ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cookbook.Recipe')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cookbook.Unit')),
            ],
            options={
                'unique_together': {('recipe', 'ingredient')},
            },
        ),
    ]
